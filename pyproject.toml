[tool.poetry]
name = "parser"
version = "0.1.0"
description = ""
authors = ["DK Best team "]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
psycopg2-binary = "^2.9.9"
python-dotenv = "^1.0.0"
fastapi = "^0.104.1"
orjson = "^3.9.10"
ecs-logging = "^2.1.0"
uvicorn = "^0.24.0.post1"
pydantic-settings = "^2.0.3"
selenium = "^4.15.2"
celery = "^5.3.5"
redis = "^5.0.1"

[tool.poetry.dev-dependencies]
mypy = "^1.7.0"
flake8 = "^6.1.0"
black = {extras = ["jupyter"], version = "^23.11.0"}
jupyter = "^1.0.0"
bs4 = "^0.0.1"
pylint = "^3.0.3"
pylint-report = "^2.4.0"
aiohttp = "^3.9.1"
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
dvc = "^3.33.3"
dvc-gdrive = "^2.20.0"



[tool.black]
 line-length = 79
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | venv
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"
multi_line_output = 3


[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pylint.main]
fail-under = 10
ignore = ["data"]
ignored-modules = ["test"]
py-version = "3.10"
suggestion-mode = true

[tool.pylint.basic]
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]
class-attribute-naming-style = "any"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
property-classes = ["abc.abstractproperty"]


[tool.pylint.format]
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
indent-after-paren = 4
indent-string = "    "
max-line-length = 79
max-module-lines = 1000


[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "invalid-all-format",
    "import-error"
]


good-names = []



[tool.pylint.similarities]
ignore-imports = true
ignore-docstrings = true
ignore-comments = true


[tool.pytest.ini_options]
asyncio_mode = "strict"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(levelname)-5.5s [%(name)s] %(message)s"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


